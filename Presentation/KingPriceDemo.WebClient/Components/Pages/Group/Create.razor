@page "/group/create"

@inject IGroupService groupService

<h3>Create Group</h3>

@if (!string.IsNullOrWhiteSpace(message))
{
    <span class="text-danger">@message</span>
}
<div class="card-body">
    <EditForm Model="Model" OnValidSubmit="HandleValidSubmit" FormName="GroupCreate">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="Name">Name</label>
            <InputText class="form-control" @bind-Value="Model.Name" />
            <ValidationMessage For="@(() => Model.Name)" />

            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    CreateGroupModel Model { get; set; } = new CreateGroupModel();
}

@code{
    string message = string.Empty;
}

@code {
    private async Task HandleValidSubmit()
    {
        var response = await groupService.CreateGroup(Model.Name);

        if (response.Success)
            manager.NavigateTo($"/group/{response.Data}");

        message = response.Message;

        await InvokeAsync(StateHasChanged);
    }
}

